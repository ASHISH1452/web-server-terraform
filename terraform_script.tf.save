provider "aws" {
  region = "ap-south-1"  # AWS Region
}

# Create a security group in default VPC
resource "aws_security_group" "web_sg" {
  name        = "web_sg"
  description = "Security group for web server"

  # Default VPC mein security group banane ke liye vpc_id zaroori nahi
  # Terraform default VPC pick karega agar vpc_id nahi diya

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]  # SSH access
  }

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]  # HTTP access
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_instance" "web_server" {
  ami           = "ami-0e35ddab05955cf57"  # Ubuntu 24.04 LTS AMI ID
  instance_type = "t2.micro"
  key_name      = "arya"  # Your SSH Key Pair name
  security_groups = [aws_security_group.web_sg.name]

  associate_public_ip_address = true

  tags }

resource "aws_s3_bucket" "static_site" {
  bucket = "ashishpal-static-site-demo-unique123"

  # Bucket ko public banane ke liye yeh settings use karo
  acl = "public-read"

  website {
    index_document = "index.html"
  }
}

# Public ACL already defined with bucket, so this block is optional now.
# If needed, use the following. Otherwise, omit it.
# resource "aws_s3_bucket_acl" "static_site_acl" {
#   bucket = aws_s3_bucket.static_site.bucket
#   acl    = "public-read"
# }

output "instance_id" {
  value = aws_instance.web_server.id
}

output "bucket_name" {
  value = aws_s3_bucket.static_site.bucket
}

